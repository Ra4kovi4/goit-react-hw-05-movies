{"version":3,"file":"static/js/603.19a5b582.chunk.js","mappings":"0RACaA,EAAYC,EAAAA,GAAAA,IAAH,0DAITC,EAAaD,EAAAA,GAAAA,GAAH,0EAKVE,EAAaF,EAAAA,GAAAA,GAAH,2EAIVG,EAAeH,EAAAA,GAAAA,GAAH,kEAKZI,EAASJ,EAAAA,GAAAA,EAAH,0D,SC6BnB,EApCoB,WAClB,OAA8BK,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GAeR,OAdAE,QAAQC,IAAIH,IACZI,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAc,mCAAG,8GAEAC,EAAAA,EAAAA,IAAeN,GAFf,OAEbO,EAFa,OAInBR,EAAWQ,GAJQ,gDAMnBL,QAAQC,IAAR,MANmB,yDAAH,qDASpBE,GACD,GAAE,CAACL,IACJE,QAAQC,IAAIL,IAEV,+BACE,SAACP,EAAD,UACuB,KAAb,OAAPO,QAAO,IAAPA,OAAA,EAAAA,EAASU,SACR,SAACf,EAAD,UACGK,EAAQW,KAAI,gBAAGT,EAAH,EAAGA,GAAIU,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,UAACjB,EAAD,YACE,UAACC,EAAD,sBAAuBe,MACvB,SAACd,EAAD,UAASe,MAFMX,EADN,OAQf,gFAKT,C,mMC7CDY,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAM,mCAECC,EAAmB,mCAAG,sGACVF,EAAAA,EAAAA,IAAU,oBAAqB,CACpDG,OAAQ,CACNC,QAASH,KAHoB,uBACzBN,EADyB,EACzBA,KADyB,kBAM1BA,EAAKU,SANqB,2CAAH,qDAUnBC,EAAe,mCAAG,WAAMC,GAAN,yFACNP,EAAAA,EAAAA,IAAA,iBAA4B,CACjDG,OAAQ,CACNI,MAAAA,EACAH,QAASH,EACTO,eAAe,KALU,uBACrBb,EADqB,EACrBA,KADqB,kBAQtBA,EAAKU,SARiB,2CAAH,sDAYfI,EAAa,mCAAG,WAAMrB,GAAN,yFACJY,EAAAA,EAAAA,IAAA,iBAAoBZ,GAAM,CAC/Ce,OAAQ,CACNC,QAASH,KAHc,uBACnBN,EADmB,EACnBA,KADmB,kBAMpBA,GANoB,2CAAH,sDAWbe,EAAiB,mCAAG,WAAMtB,GAAN,yFACRY,EAAAA,EAAAA,IAAA,iBAAoBZ,EAApB,YAAkC,CACvDe,OAAQ,CACNC,QAASH,KAHkB,uBACvBN,EADuB,EACvBA,KADuB,kBAMxBA,EAAKgB,MANmB,2CAAH,sDAUjBjB,EAAc,mCAAG,WAAMN,GAAN,yFACLY,EAAAA,EAAAA,IAAA,iBAAoBZ,EAApB,YAAkC,CACvDe,OAAQ,CACNC,QAASH,KAHe,uBACpBN,EADoB,EACpBA,KADoB,kBAMrBA,EAAKU,SANgB,2CAAH,qD","sources":["components/MovieInfo/Rewiews.styled.js","components/MovieInfo/Reviews.js","service/fetchMoovie.js"],"sourcesContent":["import styled from 'styled-components';\nexport const Container = styled.div`\n  width: 100%;\n  padding: 15px;\n`;\nexport const ReviewList = styled.ul`\n  list-style: none;\n  margin: 0;\n  padding: 0;\n`;\nexport const ReviewItem = styled.li`\n  margin-bottom: 15px;\n  border: 1px solid grey;\n`;\nexport const ReviewAythor = styled.h2`\n  margin: 0 0 3px 0;\n  font-size: 16px;\n`;\n\nexport const Rewiew = styled.p`\n  font-size: 14px;\n  margin: 0;\n`;\n","import { getMovieReview } from '../../service/fetchMoovie';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport {\n  ReviewList,\n  ReviewItem,\n  ReviewAythor,\n  Rewiew,\n  Container,\n} from './Rewiews.styled';\n\nconst MovieReview = () => {\n  const [reviews, setReviews] = useState([]);\n  const { id } = useParams();\n  console.log(id);\n  useEffect(() => {\n    const fetchCastMovie = async () => {\n      try {\n        const data = await getMovieReview(id);\n\n        setReviews(data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchCastMovie();\n  }, [id]);\n  console.log(reviews);\n  return (\n    <>\n      <Container>\n        {reviews?.length !== 0 ? (\n          <ReviewList>\n            {reviews.map(({ id, author, content }) => (\n              <ReviewItem key={id}>\n                <ReviewAythor>Author: {author}</ReviewAythor>\n                <Rewiew>{content}</Rewiew>\n              </ReviewItem>\n            ))}\n          </ReviewList>\n        ) : (\n          <h2>Unfortunately, there are no reviews of this film</h2>\n        )}\n      </Container>\n    </>\n  );\n};\nexport default MovieReview;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst KEY = '27957f45446c592c6fc00916bd09edac';\n//запрос популярных фильмов\nexport const getPopularityMoovie = async () => {\n  const { data } = await axios.get('/trending/all/day', {\n    params: {\n      api_key: KEY,\n    },\n  });\n  return data.results;\n};\n\n//запрос фильма по ключевому слову\nexport const getMoovieByName = async query => {\n  const { data } = await axios.get(`/search/movie/`, {\n    params: {\n      query,\n      api_key: KEY,\n      include_adult: false,\n    },\n  });\n  return data.results;\n};\n\n//запрос инфо о фильме по id\nexport const getMoovieById = async id => {\n  const { data } = await axios.get(`/movie/${id}`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n  return data;\n};\n\n//запрос на каст фмльма\n\nexport const getMooviecastById = async id => {\n  const { data } = await axios.get(`/movie/${id}/credits`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n  return data.cast;\n};\n\n//запрос ревью на фильм\nexport const getMovieReview = async id => {\n  const { data } = await axios.get(`/movie/${id}/reviews`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n  return data.results;\n};\n"],"names":["Container","styled","ReviewList","ReviewItem","ReviewAythor","Rewiew","useState","reviews","setReviews","id","useParams","console","log","useEffect","fetchCastMovie","getMovieReview","data","length","map","author","content","axios","KEY","getPopularityMoovie","params","api_key","results","getMoovieByName","query","include_adult","getMoovieById","getMooviecastById","cast"],"sourceRoot":""}