{"version":3,"file":"static/js/623.657f32f3.chunk.js","mappings":"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","sources":["components/Loader/Loader.js","components/MoviesList/PopularityMovies.styled.js","components/MoviesList/MovieList.js","components/SearchForm/SearchForm.styled.js","components/SearchForm/SearchForm.js","pages/Movies.js","service/fetchMoovie.js"],"sourcesContent":["import { ThreeCircles } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <>\n      <ThreeCircles\n        color=\"#00BFFF\"\n        height={80}\n        width={80}\n        wrapperStyle={{\n          position: 'absolute',\n          top: '50%',\n          left: '50%',\n          transform: 'translate(-50%, -50%)',\n        }}\n      />\n    </>\n  );\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nexport const List = styled.ul`\n  list-style: none;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  grid-gap: 15px;\n`;\n\nexport const ListItem = styled.li`\n  background-color: '#fff';\n  border: 1px solid;\n  border-radius: 5px;\n  transition: transform 0.5s cubic-bezier(0.1, 0.7, 1, 0.1);\n  padding: 10px;\n  text-align: center;\n  overflow: hidden;\n  cursor: zoom-in;\n\n  &:hover,\n  &:focus {\n    transform: scale(1.05);\n    box-shadow: rgba(99, 99, 99, 0.2) 0px 2px 8px 0px;\n  }\n`;\nexport const StyledLink = styled(Link)`\n  text-decoration: none;\n  color: #b22222;\n`;\n\nexport const Poster = styled.img`\n  max-width: 100%;\n  display: block;\n  width: 250px;\n  height: auto;\n`;\nexport const TitleMovie = styled.h2`\n  font-size: 16px;\n`;\n","import PropTypes from 'prop-types';\nimport {\n  List,\n  ListItem,\n  TitleMovie,\n  StyledLink,\n  Poster,\n} from './PopularityMovies.styled';\n\nexport const MovieList = ({ movies, location }) => {\n  return (\n    <List>\n      {movies.map(\n        ({ id, original_name, original_title, title, poster_path }) => (\n          <ListItem key={id}>\n            <StyledLink to={`/movie/${id}`} state={{ from: location }}>\n              <Poster\n                src={\n                  poster_path\n                    ? `https://image.tmdb.org/t/p/original${poster_path}`\n                    : 'https://i.postimg.cc/g2dNFPgn/Placeholder.png'\n                }\n                alt={title || original_title || original_name}\n              />\n              <TitleMovie>\n                {title || original_title || original_name}\n              </TitleMovie>\n            </StyledLink>\n          </ListItem>\n        )\n      )}\n    </List>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      original_name: PropTypes.string,\n      original_title: PropTypes.string,\n      title: PropTypes.string,\n      poster_path: PropTypes.string,\n    })\n  ).isRequired,\n  location: PropTypes.shape({\n    state: PropTypes.string,\n  }).isRequired,\n};\n","import styled from 'styled-components';\n\nexport const FormSearch = styled.form`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 15px;\n`;\nexport const Input = styled.input`\n  width: 450px;\n  padding: 15px;\n  border: 1px solid 'grey';\n  border-radius: 5px;\n  font-size: 14px;\n  color: 'black';\n`;\n\nexport const SubmitButton = styled.button`\n  width: 100px;\n  padding: 15px;\n  border: 1px solid grey;\n  border-radius: 5px;\n  font-size: 14px;\n  font-weight: 700;\n  color: black;\n  background-color: paleTurquoise;\n  margin-left: 10px;\n  :hover {\n    background-color: turquoise;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { FormSearch, Input, SubmitButton } from './SearchForm.styled';\nimport { useState } from 'react';\n\nexport const SearchForm = ({ onSubmit }) => {\n  const [query, setQuery] = useState('');\n\n  const onChange = e => {\n    setQuery(e.target.value);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit(query);\n  };\n  return (\n    <>\n      <FormSearch onSubmit={handleSubmit}>\n        <Input value={query} onChange={onChange} />\n        <SubmitButton type=\"submit\" children=\"Search\" />\n      </FormSearch>\n    </>\n  );\n};\n\nSearchForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\n\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { getMoovieByName } from '../service/fetchMoovie';\nimport { MovieList } from '../components/MoviesList/MovieList';\nimport { SearchForm } from '../components/SearchForm/SearchForm';\nimport { Loader } from 'components/Loader/Loader';\n\nconst Movies = () => {\n  const [queryMovies, setQueryMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchQuery = searchParams.get('query') ?? '';\n  const location = useLocation();\n  useEffect(() => {\n    setIsLoading(true);\n    const fetchMovieByName = async () => {\n      try {\n        const data = await getMoovieByName(searchQuery.toLowerCase().trim());\n        if (data.length === 0) {\n          toast.info(\"We didn't find any movies for your query\");\n        }\n        setQueryMovies(data);\n      } catch (error) {\n        console.log(error);\n        toast.warn(`Oops, something went wrong! Try again`);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    if (searchQuery === '') {\n      return;\n    } else {\n      fetchMovieByName();\n    }\n  }, [searchQuery]);\n\n  const handleSubmit = value => {\n    setSearchParams({ query: value });\n  };\n  return (\n    <>\n      {isLoading && Loader}\n      <SearchForm onSubmit={handleSubmit} />\n      <MovieList movies={queryMovies} location={location} />\n    </>\n  );\n};\nexport default Movies;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst KEY = '27957f45446c592c6fc00916bd09edac';\n//запрос популярных фильмов\nexport const getPopularityMoovie = async () => {\n  const { data } = await axios.get('/trending/all/day', {\n    params: {\n      api_key: KEY,\n    },\n  });\n  return data.results;\n};\n\n//запрос фильма по ключевому слову\nexport const getMoovieByName = async query => {\n  const { data } = await axios.get(`/search/movie`, {\n    params: {\n      query,\n      api_key: KEY,\n      include_adult: false,\n    },\n  });\n  return data.results;\n};\n\n//запрос инфо о фильме по id\nexport const getMoovieById = async id => {\n  const { data } = await axios.get(`/movie/${id}`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n  return data;\n};\n\n//запрос на каст фмльма\n\nexport const getMooviecastById = async id => {\n  const { data } = await axios.get(`/movie/${id}/credits`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n  return data.cast;\n};\n\n//запрос ревью на фильм\nexport const getMovieReview = async id => {\n  const { data } = await axios.get(`/movie/${id}/reviews`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n  return data.results;\n};\n"],"names":["Loader","color","height","width","wrapperStyle","position","top","left","transform","List","styled","ListItem","StyledLink","Link","Poster","TitleMovie","MovieList","movies","location","map","id","original_name","original_title","title","poster_path","to","state","from","src","alt","FormSearch","Input","SubmitButton","SearchForm","onSubmit","useState","query","setQuery","e","preventDefault","value","onChange","target","type","children","queryMovies","setQueryMovies","isLoading","setIsLoading","useSearchParams","searchParams","setSearchParams","searchQuery","get","useLocation","useEffect","fetchMovieByName","getMoovieByName","toLowerCase","trim","data","length","toast","console","log","axios","KEY","getPopularityMoovie","params","api_key","results","include_adult","getMoovieById","getMooviecastById","cast","getMovieReview"],"sourceRoot":""}