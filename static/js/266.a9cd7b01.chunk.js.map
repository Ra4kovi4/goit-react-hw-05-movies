{"version":3,"file":"static/js/266.a9cd7b01.chunk.js","mappings":"8LAEaA,EAAS,WACpB,OACE,+BACE,SAAC,KAAD,CACEC,MAAM,UACNC,OAAQ,GACRC,MAAO,GACPC,aAAc,CACZC,SAAU,WACVC,IAAK,MACLC,KAAM,MACNC,UAAW,4BAKpB,C,kGChBYC,EAAOC,EAAAA,GAAAA,GAAH,mJAOJC,EAAWD,EAAAA,GAAAA,GAAH,uWAgBRE,GAAaF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,qEAKVI,EAASJ,EAAAA,GAAAA,IAAH,iGAMNK,EAAaL,EAAAA,GAAAA,GAAH,4C,SC3BVM,EAAY,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,OAAQC,EAAe,EAAfA,SAClC,OACE,SAACT,EAAD,UACGQ,EAAOE,KACN,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,cAAeC,EAAtB,EAAsBA,eAAgBC,EAAtC,EAAsCA,MAAOC,EAA7C,EAA6CA,YAA7C,OACE,SAACb,EAAD,WACE,UAACC,EAAD,CAAYa,GAAE,iBAAYL,GAAMM,MAAO,CAAEC,KAAMT,GAA/C,WACE,SAACJ,EAAD,CACEc,IACEJ,EAAW,6CAC+BA,GACtC,gDAENK,IAAKN,GAASD,GAAkBD,KAElC,SAACN,EAAD,UACGQ,GAASD,GAAkBD,QAXnBD,EADjB,KAoBP,C,wJCID,UA7Ba,WACX,OAA4BU,EAAAA,EAAAA,WAAS,GAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOb,EAAP,KAAegB,EAAf,KACMf,GAAWgB,EAAAA,EAAAA,MAmBjB,OAlBAC,EAAAA,EAAAA,YAAU,WACRH,GAAU,GAEV,IAAMI,EAAoB,mCAAG,8GAENC,EAAAA,EAAAA,MAFM,OAEnBC,EAFmB,OAIzBL,EAAUK,GAJe,gDAMzBC,QAAQC,IAAR,MACAC,EAAAA,GAAAA,KAAA,yCAPyB,yBASzBT,GAAU,GATe,4EAAH,qDAY1BI,GACD,GAAE,KAGD,gCACGL,IAAU,SAAC,IAAD,KACX,SAAC,IAAD,CAAWd,OAAQA,EAAQC,SAAUA,MAG1C,C,mMClCDwB,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAM,mCAECN,EAAmB,mCAAG,sGACVK,EAAAA,EAAAA,IAAU,oBAAqB,CACpDE,OAAQ,CACNC,QAASF,KAHoB,uBACzBL,EADyB,EACzBA,KADyB,kBAM1BA,EAAKQ,SANqB,2CAAH,qDAUnBC,EAAe,mCAAG,WAAMC,GAAN,yFACNN,EAAAA,EAAAA,IAAA,iBAA4B,CACjDE,OAAQ,CACNI,MAAAA,EACAH,QAASF,EACTM,eAAe,KALU,uBACrBX,EADqB,EACrBA,KADqB,kBAQtBA,EAAKQ,SARiB,2CAAH,sDAYfI,EAAa,mCAAG,WAAM9B,GAAN,yFACJsB,EAAAA,EAAAA,IAAA,iBAAoBtB,GAAM,CAC/CwB,OAAQ,CACNC,QAASF,KAHc,uBACnBL,EADmB,EACnBA,KADmB,kBAMpBA,GANoB,2CAAH,sDAWba,EAAiB,mCAAG,WAAM/B,GAAN,yFACRsB,EAAAA,EAAAA,IAAA,iBAAoBtB,EAApB,YAAkC,CACvDwB,OAAQ,CACNC,QAASF,KAHkB,uBACvBL,EADuB,EACvBA,KADuB,kBAMxBA,EAAKc,MANmB,2CAAH,sDAUjBC,EAAc,mCAAG,WAAMjC,GAAN,yFACLsB,EAAAA,EAAAA,IAAA,iBAAoBtB,EAApB,YAAkC,CACvDwB,OAAQ,CACNC,QAASF,KAHe,uBACpBL,EADoB,EACpBA,KADoB,kBAMrBA,EAAKQ,SANgB,2CAAH,qD","sources":["components/Loader/Loader.js","components/MoviesList/PopularityMovies.styled.js","components/MoviesList/MovieList.js","pages/Home.js","service/fetchMoovie.js"],"sourcesContent":["import { ThreeCircles } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <>\n      <ThreeCircles\n        color=\"#00BFFF\"\n        height={80}\n        width={80}\n        wrapperStyle={{\n          position: 'absolute',\n          top: '50%',\n          left: '50%',\n          transform: 'translate(-50%, -50%)',\n        }}\n      />\n    </>\n  );\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nexport const List = styled.ul`\n  list-style: none;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  grid-gap: 15px;\n`;\n\nexport const ListItem = styled.li`\n  background-color: '#fff';\n  border: 1px solid;\n  border-radius: 5px;\n  transition: transform 0.5s cubic-bezier(0.1, 0.7, 1, 0.1);\n  padding: 10px;\n  text-align: center;\n  overflow: hidden;\n  cursor: zoom-in;\n\n  &:hover,\n  &:focus {\n    transform: scale(1.05);\n    box-shadow: rgba(99, 99, 99, 0.2) 0px 2px 8px 0px;\n  }\n`;\nexport const StyledLink = styled(Link)`\n  text-decoration: none;\n  color: #b22222;\n`;\n\nexport const Poster = styled.img`\n  max-width: 100%;\n  display: block;\n  width: 250px;\n  height: auto;\n`;\nexport const TitleMovie = styled.h2`\n  font-size: 16px;\n`;\n","import PropTypes from 'prop-types';\nimport {\n  List,\n  ListItem,\n  TitleMovie,\n  StyledLink,\n  Poster,\n} from './PopularityMovies.styled';\n\nexport const MovieList = ({ movies, location }) => {\n  return (\n    <List>\n      {movies.map(\n        ({ id, original_name, original_title, title, poster_path }) => (\n          <ListItem key={id}>\n            <StyledLink to={`/movie/${id}`} state={{ from: location }}>\n              <Poster\n                src={\n                  poster_path\n                    ? `https://image.tmdb.org/t/p/original${poster_path}`\n                    : 'https://i.postimg.cc/g2dNFPgn/Placeholder.png'\n                }\n                alt={title || original_title || original_name}\n              />\n              <TitleMovie>\n                {title || original_title || original_name}\n              </TitleMovie>\n            </StyledLink>\n          </ListItem>\n        )\n      )}\n    </List>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      original_name: PropTypes.string,\n      original_title: PropTypes.string,\n      title: PropTypes.string,\n      poster_path: PropTypes.string,\n    })\n  ).isRequired,\n  location: PropTypes.shape({\n    state: PropTypes.string,\n  }).isRequired,\n};\n","import { getPopularityMoovie } from 'service/fetchMoovie';\nimport { useState, useEffect } from 'react';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { MovieList } from '../components/MoviesList/MovieList';\nimport { Loader } from '../components/Loader/Loader';\nimport { useLocation } from 'react-router-dom';\n\nconst Home = () => {\n  const [isLoad, setIsLoad] = useState(false);\n  const [movies, setMovies] = useState([]);\n  const location = useLocation();\n  useEffect(() => {\n    setIsLoad(true);\n\n    const fetchPopularityMovie = async () => {\n      try {\n        const data = await getPopularityMoovie();\n\n        setMovies(data);\n      } catch (error) {\n        console.log(error);\n        toast.warn(`Oops, something went wrong! Try again`);\n      } finally {\n        setIsLoad(false);\n      }\n    };\n    fetchPopularityMovie();\n  }, []);\n\n  return (\n    <>\n      {isLoad && <Loader />}\n      <MovieList movies={movies} location={location} />\n    </>\n  );\n};\nexport default Home;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst KEY = '27957f45446c592c6fc00916bd09edac';\n//запрос популярных фильмов\nexport const getPopularityMoovie = async () => {\n  const { data } = await axios.get('/trending/all/day', {\n    params: {\n      api_key: KEY,\n    },\n  });\n  return data.results;\n};\n\n//запрос фильма по ключевому слову\nexport const getMoovieByName = async query => {\n  const { data } = await axios.get(`/search/movie/`, {\n    params: {\n      query,\n      api_key: KEY,\n      include_adult: false,\n    },\n  });\n  return data.results;\n};\n\n//запрос инфо о фильме по id\nexport const getMoovieById = async id => {\n  const { data } = await axios.get(`/movie/${id}`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n  return data;\n};\n\n//запрос на каст фмльма\n\nexport const getMooviecastById = async id => {\n  const { data } = await axios.get(`/movie/${id}/credits`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n  return data.cast;\n};\n\n//запрос ревью на фильм\nexport const getMovieReview = async id => {\n  const { data } = await axios.get(`/movie/${id}/reviews`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n  return data.results;\n};\n"],"names":["Loader","color","height","width","wrapperStyle","position","top","left","transform","List","styled","ListItem","StyledLink","Link","Poster","TitleMovie","MovieList","movies","location","map","id","original_name","original_title","title","poster_path","to","state","from","src","alt","useState","isLoad","setIsLoad","setMovies","useLocation","useEffect","fetchPopularityMovie","getPopularityMoovie","data","console","log","toast","axios","KEY","params","api_key","results","getMoovieByName","query","include_adult","getMoovieById","getMooviecastById","cast","getMovieReview"],"sourceRoot":""}