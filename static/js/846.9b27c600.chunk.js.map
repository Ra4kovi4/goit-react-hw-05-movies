{"version":3,"file":"static/js/846.9b27c600.chunk.js","mappings":"0RACaA,EAAWC,EAAAA,GAAAA,GAAH,qKAORC,EAAWD,EAAAA,GAAAA,GAAH,uWAiBRE,EAAaF,EAAAA,GAAAA,IAAH,iGAMVG,EAAWH,EAAAA,GAAAA,GAAH,4CAGRI,EAAYJ,EAAAA,GAAAA,EAAH,6C,SCqBtB,EA5CkB,WAChB,OAAwBK,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GAeR,OAdAE,QAAQC,IAAIH,IACZI,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAc,mCAAG,8GAEAC,EAAAA,EAAAA,IAAkBN,GAFlB,OAEbO,EAFa,OAInBR,EAAQQ,GAJW,gDAMnBL,QAAQC,IAAR,MANmB,yDAAH,qDASpBE,GACD,GAAE,CAACL,IACJE,QAAQC,IAAIL,IAEV,8BACoB,KAAb,OAAJA,QAAI,IAAJA,OAAA,EAAAA,EAAMU,SACL,SAACjB,EAAD,UACGO,EAAKW,KAAI,gBAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,aAAcC,EAAvB,EAAuBA,UAAvB,OACR,UAACnB,EAAD,YACE,SAACC,EAAD,CACEmB,IACEF,EAAY,6CAC8BA,GACtC,gDAENG,IAAKJ,KAEP,SAACf,EAAD,UAAWe,KACX,UAACd,EAAD,0BACa,uBAAIgB,SAXJF,EADP,OAkBZ,4EAIP,C,mMCpDDK,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAM,mCAECC,EAAmB,mCAAG,sGACVF,EAAAA,EAAAA,IAAU,oBAAqB,CACpDG,OAAQ,CACNC,QAASH,KAHoB,uBACzBT,EADyB,EACzBA,KADyB,kBAM1BA,EAAKa,SANqB,2CAAH,qDAUnBC,EAAe,mCAAG,WAAMC,GAAN,yFACNP,EAAAA,EAAAA,IAAA,iBAA4B,CACjDG,OAAQ,CACNI,MAAAA,EACAH,QAASH,EACTO,eAAe,KALU,uBACrBhB,EADqB,EACrBA,KADqB,kBAQtBA,EAAKa,SARiB,2CAAH,sDAYfI,EAAa,mCAAG,WAAMxB,GAAN,yFACJe,EAAAA,EAAAA,IAAA,iBAAoBf,GAAM,CAC/CkB,OAAQ,CACNC,QAASH,KAHc,uBACnBT,EADmB,EACnBA,KADmB,kBAMpBA,GANoB,2CAAH,sDAWbD,EAAiB,mCAAG,WAAMN,GAAN,yFACRe,EAAAA,EAAAA,IAAA,iBAAoBf,EAApB,YAAkC,CACvDkB,OAAQ,CACNC,QAASH,KAHkB,uBACvBT,EADuB,EACvBA,KADuB,kBAMxBA,EAAKT,MANmB,2CAAH,sDAUjB2B,EAAc,mCAAG,WAAMzB,GAAN,yFACLe,EAAAA,EAAAA,IAAA,iBAAoBf,EAApB,YAAkC,CACvDkB,OAAQ,CACNC,QAASH,KAHe,uBACpBT,EADoB,EACpBA,KADoB,kBAMrBA,EAAKa,SANgB,2CAAH,qD","sources":["components/MovieInfo/Cast.styled.js","components/MovieInfo/Cast.js","service/fetchMoovie.js"],"sourcesContent":["import styled from 'styled-components';\nexport const CastList = styled.ul`\n  list-style: none;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  grid-gap: 15px;\n  padding: 15px;\n`;\nexport const ListItem = styled.li`\n  background-color: '#fff';\n  border: 1px solid;\n  border-radius: 5px;\n  transition: transform 0.5s cubic-bezier(0.1, 0.7, 1, 0.1);\n  padding: 10px;\n  text-align: center;\n  overflow: hidden;\n  cursor: zoom-in;\n\n  &:hover,\n  &:focus {\n    transform: scale(1.05);\n    box-shadow: rgba(99, 99, 99, 0.2) 0px 2px 8px 0px;\n  }\n`;\n\nexport const CastPoster = styled.img`\n  max-width: 100%;\n  display: block;\n  width: 250px;\n  height: auto;\n`;\nexport const CastName = styled.h2`\n  font-size: 16px;\n`;\nexport const Character = styled.p`\n  font-size: 14 px;\n`;\n","import { getMooviecastById } from '../../service/fetchMoovie';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport {\n  CastList,\n  ListItem,\n  CastPoster,\n  CastName,\n  Character,\n} from './Cast.styled';\nconst MovieCast = () => {\n  const [cast, setCast] = useState([]);\n  const { id } = useParams();\n  console.log(id);\n  useEffect(() => {\n    const fetchCastMovie = async () => {\n      try {\n        const data = await getMooviecastById(id);\n\n        setCast(data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchCastMovie();\n  }, [id]);\n  console.log(cast);\n  return (\n    <>\n      {cast?.length !== 0 ? (\n        <CastList>\n          {cast.map(({ name, profile_path, character }) => (\n            <ListItem key={name}>\n              <CastPoster\n                src={\n                  profile_path\n                    ? `https://image.tmdb.org/t/p/original${profile_path}`\n                    : 'https://i.postimg.cc/g2dNFPgn/Placeholder.png'\n                }\n                alt={name}\n              />\n              <CastName>{name}</CastName>\n              <Character>\n                Character: <b>{character}</b>\n              </Character>\n            </ListItem>\n          ))}\n        </CastList>\n      ) : (\n        <h2>Sorry we did't find any information about cast</h2>\n      )}\n    </>\n  );\n};\nexport default MovieCast;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst KEY = '27957f45446c592c6fc00916bd09edac';\n//запрос популярных фильмов\nexport const getPopularityMoovie = async () => {\n  const { data } = await axios.get('/trending/all/day', {\n    params: {\n      api_key: KEY,\n    },\n  });\n  return data.results;\n};\n\n//запрос фильма по ключевому слову\nexport const getMoovieByName = async query => {\n  const { data } = await axios.get(`/search/movie/`, {\n    params: {\n      query,\n      api_key: KEY,\n      include_adult: false,\n    },\n  });\n  return data.results;\n};\n\n//запрос инфо о фильме по id\nexport const getMoovieById = async id => {\n  const { data } = await axios.get(`/movie/${id}`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n  return data;\n};\n\n//запрос на каст фмльма\n\nexport const getMooviecastById = async id => {\n  const { data } = await axios.get(`/movie/${id}/credits`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n  return data.cast;\n};\n\n//запрос ревью на фильм\nexport const getMovieReview = async id => {\n  const { data } = await axios.get(`/movie/${id}/reviews`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n  return data.results;\n};\n"],"names":["CastList","styled","ListItem","CastPoster","CastName","Character","useState","cast","setCast","id","useParams","console","log","useEffect","fetchCastMovie","getMooviecastById","data","length","map","name","profile_path","character","src","alt","axios","KEY","getPopularityMoovie","params","api_key","results","getMoovieByName","query","include_adult","getMoovieById","getMovieReview"],"sourceRoot":""}